---
title: "Lab 17- AWS Data"
author: "Emily Ignatoff (A16732102)"
format: pdf
---

## Downstream Analysis

```{r}
library(tximport)
```

```{r}
folders <- dir(pattern="SRR21568*")
samples <- sub("_quant", "", folders)
files <- file.path( folders, "abundance.h5" )
names(files) <- samples

txi.kallisto <- tximport(files, type = "kallisto", txOut = TRUE)
```

```{r}
head(txi.kallisto$counts)
```


Transcripts per sample:

```{r}
colSums(txi.kallisto$counts)
```

Transcripts detected in at least one of the four samples:

```{r}
sum(rowSums(txi.kallisto$counts)>0)
```

Remove zeroes from the dataset:

```{r}
to.keep <- rowSums(txi.kallisto$counts) > 0
kset.nonzero <- txi.kallisto$counts[to.keep,]
```

```{r}
keep2 <- apply(kset.nonzero,1,sd)>0
x <- kset.nonzero[keep2,]
```


## Principal Component Analysis

```{r}
pca <- prcomp(t(x), scale=TRUE)
```

```{r}
summary(pca)
```
```{r}
plot(pca$x[,1], pca$x[,2],
     col=c("green4","green4","purple2","purple2"),
     xlab="PC1", ylab="PC2", pch=16)
```

> Q. Use ggplot to make a similar figure of PC1 vs PC2 and a seperate figure PC1 vs PC3 and PC2 vs PC3.

```{r}
library(ggplot2)
library(ggrepel)

colData <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(colData) <- colnames(txi.kallisto$counts)

df <- as.data.frame(pca$x)
df$Condition <- as.factor(colData$condition)

ggplot(df) +
  aes(PC1, PC2, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(df)) +
  theme_minimal()

```

```{r}
ggplot(df) +
  aes(PC1, PC3, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(df)) +
  theme_minimal()
```


```{r}
ggplot(df) +
  aes(PC2, PC3, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(df)) +
  theme_minimal()

```

## DE analysis

```{r}
library(DESeq2)
```

```{r}
sampleTable <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(sampleTable) <- colnames(txi.kallisto$counts)
```

```{r}
dds <- DESeqDataSetFromTximport(txi.kallisto,
                                sampleTable, 
                                ~condition)
```
```{r}
dds <- DESeq(dds)
```

```{r}
res <- results(dds)
head(res)
```


